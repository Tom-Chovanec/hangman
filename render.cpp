#include "iostream"
#include <thread>
#include <conio.h>
#include "a.h"
using namespace std;

enum HangmanStage {
    TITLE = 1,

    TITLE_EN_PLAY,
    TITLE_EN_SETTINGS,
    TITLE_EN_QUIT,

    SETTINGS_EN_PLAY_SP,
    SETTINGS_EN_PLAY_MP,
    SETTINGS_EN_LANG_SK,
    SETTINGS_EN_LANG_EN,
    SETTINGS_EN_DIFF_EASY,
    SETTINGS_EN_DIFF_HARD,
    SETTINGS_EN_EXIT,

    TITLE_SK_PLAY,
    TITLE_SK_SETTINGS,
    TITLE_SK_QUIT,

    SETTINGS_SK_PLAY_SP,
    SETTINGS_SK_PLAY_MP,
    SETTINGS_SK_LANG_SK,
    SETTINGS_SK_LANG_EN,
    SETTINGS_SK_DIFF_EASY,
    SETTINGS_SK_DIFF_HARD,
    SETTINGS_SK_EXIT,

    RULES_EN,
    RULES_SK,

    VICTORY_EN,
    LOSS_EN,

    VICTORY_SK,
    LOSS_SK,

    STAGE_1,
    STAGE_2,
    STAGE_3,
    STAGE_4,
    STAGE_5,
    STAGE_6,
    STAGE_7,
    STAGE_8,
    STAGE_9,

    STAGE_10,
    EASTEREGG
};

//TODO: make a UI
//      restart menu
//      single/multiplayer option menu  ??
//      difficulty selector

void renderAscii(unsigned int a)
{
    switch (a)
    {
    case TITLE:
        std::this_thread::sleep_for(std::chrono::milliseconds(400));

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| |                                                             ║)" << "\n";
        cout << R"(║                       |  _  |                                                             ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       \_| |_/                                                             ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _                                                        ║)" << "\n";
        cout << R"(║                       |  _  |/ _` |                                                       ║)" << "\n";
        cout << R"(║                       | | | | (_| |                                                       ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|                                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __                                                   ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \                                                  ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | |                                                 ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|                                                 ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _                                            ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` |                                           ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| |                                           ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |                                           ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___                                   ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \                                  ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | |                                 ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|                                 ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();
        

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _                            ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` |                           ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| |                           ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|                           ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                     ┏━━━━━━━━━━┓      ┏━━━━━━━━━━━━━━┓      ┏━━━━━━━━━━┓                  ║)" << "\n";
        cout << R"(║                     ┃   PLAY   ┃      ┃   SETTINGS   ┃      ┃   QUIT   ┃                  ║)" << "\n";
        cout << R"(║                     ┗━━━━━━━━━━┛      ┗━━━━━━━━━━━━━━┛      ┗━━━━━━━━━━┛                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << "\n\n\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        while (_kbhit()) _getch();
        break;

    case TITLE_EN_PLAY:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                   >>┏━━━━━━━━━━┓<<    ┏━━━━━━━━━━━━━━┓      ┏━━━━━━━━━━┓                  ║)" << "\n";
        cout << R"(║                   >>┃   PLAY   ┃<<    ┃   SETTINGS   ┃      ┃   QUIT   ┃                  ║)" << "\n";
        cout << R"(║                   >>┗━━━━━━━━━━┛<<    ┗━━━━━━━━━━━━━━┛      ┗━━━━━━━━━━┛                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case TITLE_EN_SETTINGS:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                     ┏━━━━━━━━━━┓    >>┏━━━━━━━━━━━━━━┓<<    ┏━━━━━━━━━━┓                  ║)" << "\n";
        cout << R"(║                     ┃   PLAY   ┃    >>┃   SETTINGS   ┃<<    ┃   QUIT   ┃                  ║)" << "\n";
        cout << R"(║                     ┗━━━━━━━━━━┛    >>┗━━━━━━━━━━━━━━┛<<    ┗━━━━━━━━━━┛                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case TITLE_EN_QUIT:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                     ┏━━━━━━━━━━┓      ┏━━━━━━━━━━━━━━┓    >>┏━━━━━━━━━━┓<<                ║)" << "\n";
        cout << R"(║                     ┃   PLAY   ┃      ┃   SETTINGS   ┃    >>┃   QUIT   ┃<<                ║)" << "\n";
        cout << R"(║                     ┗━━━━━━━━━━┛      ┗━━━━━━━━━━━━━━┛    >>┗━━━━━━━━━━┛<<                ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case TITLE_SK_PLAY:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                   >>┏━━━━━━━━━━┓<<    ┏━━━━━━━━━━━━━━┓      ┏━━━━━━━━━━┓                  ║)" << "\n";
        cout << R"(║                   >>┃   HRAŤ   ┃<<    ┃  NASTAVENIA  ┃      ┃   EXIT   ┃                  ║)" << "\n";
        cout << R"(║                   >>┗━━━━━━━━━━┛<<    ┗━━━━━━━━━━━━━━┛      ┗━━━━━━━━━━┛                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case TITLE_SK_SETTINGS:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                     ┏━━━━━━━━━━┓    >>┏━━━━━━━━━━━━━━┓<<    ┏━━━━━━━━━━┓                  ║)" << "\n";
        cout << R"(║                     ┃   HRAŤ   ┃    >>┃  NASTAVENIA  ┃<<    ┃   EXIT   ┃                  ║)" << "\n";
        cout << R"(║                     ┗━━━━━━━━━━┛    >>┗━━━━━━━━━━━━━━┛<<    ┗━━━━━━━━━━┛                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case TITLE_SK_QUIT:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                        _   _                                                              ║)" << "\n";
        cout << R"(║                       | | | |                                                             ║)" << "\n";
        cout << R"(║                       | |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __                       ║)" << "\n";
        cout << R"(║                       |  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \                      ║)" << "\n";
        cout << R"(║                       | | | | (_| | | | | (_| | | | | | | (_| | | | |                     ║)" << "\n";
        cout << R"(║                       \_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|                     ║)" << "\n";
        cout << R"(║                                           __/ |                                           ║)" << "\n";
        cout << R"(║                                          |___/                                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                     ┏━━━━━━━━━━┓      ┏━━━━━━━━━━━━━━┓    >>┏━━━━━━━━━━┓<<                ║)" << "\n";
        cout << R"(║                     ┃   HRAŤ   ┃      ┃  NASTAVENIA  ┃    >>┃   EXIT   ┃<<                ║)" << "\n";
        cout << R"(║                     ┗━━━━━━━━━━┛      ┗━━━━━━━━━━━━━━┛    >>┗━━━━━━━━━━┛<<                ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;




    case SETTINGS_EN_PLAY_SP:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           Settings                                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           PLAYERS                                         ║)" << "\n";
        cout << R"(║                        >┏━━━━━━━━━━┓<                 ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        >┃   ONE    ┃<                 ┃   TWO    ┃                        ║)" << "\n";
        cout << R"(║                        >┗━━━━━━━━━━┛<                 ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           LANGUAGE                                        ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          DIFFICULTY                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   EASY   ┃                  ┃   HARD   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_EN_PLAY_MP:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           Settings                                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           PLAYERS                                         ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                 >┏━━━━━━━━━━┓<                       ║)" << "\n";
        cout << R"(║                         ┃   ONE    ┃                 >┃   TWO    ┃<                       ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                 >┗━━━━━━━━━━┛<                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           LANGUAGE                                        ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          DIFFICULTY                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   EASY   ┃                  ┃   HARD   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_EN_LANG_SK:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           Settings                                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           PLAYERS                                         ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   ONE    ┃                  ┃   TWO    ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           LANGUAGE                                        ║)" << "\n";
        cout << R"(║                       >┏━━━━━━━━━━━┓<                 ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                       >┃ SLOVENSKÝ ┃<                 ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                       >┗━━━━━━━━━━━┛<                 ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          DIFFICULTY                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   EASY   ┃                  ┃   HARD   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_EN_LANG_EN:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           Settings                                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           PLAYERS                                         ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   ONE    ┃                  ┃   TWO    ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           LANGUAGE                                        ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                 >┏━━━━━━━━━━┓<                       ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                 >┃ ENGLISH  ┃<                       ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                 >┗━━━━━━━━━━┛<                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          DIFFICULTY                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   EASY   ┃                  ┃   HARD   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;



    case SETTINGS_EN_DIFF_EASY:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           Settings                                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           PLAYERS                                         ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   ONE    ┃                  ┃   TWO    ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           LANGUAGE                                        ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          DIFFICULTY                                       ║)" << "\n";
        cout << R"(║                        >┏━━━━━━━━━━┓<                 ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        >┃   EASY   ┃<                 ┃   HARD   ┃                        ║)" << "\n";
        cout << R"(║                        >┗━━━━━━━━━━┛<                 ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_EN_DIFF_HARD:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           Settings                                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           PLAYERS                                         ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   ONE    ┃                  ┃   TWO    ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           LANGUAGE                                        ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          DIFFICULTY                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                 >┏━━━━━━━━━━┓<                       ║)" << "\n";
        cout << R"(║                         ┃   EASY   ┃                 >┃   HARD   ┃<                       ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                 >┗━━━━━━━━━━┛<                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_EN_EXIT:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           Settings                                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           PLAYERS                                         ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   ONE    ┃                  ┃   TWO    ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                           LANGUAGE                                        ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          DIFFICULTY                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃   EASY   ┃                  ┃   HARD   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                        >┏━━━━━━━━━━┓<                                     ║)" << "\n";
        cout << R"(║                                        >┃   EXIT   ┃<                                     ║)" << "\n";
        cout << R"(║                                        >┗━━━━━━━━━━┛<                                     ║)" << "\n";
        cout << R"(║                                       (ARROWS + ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;



    case SETTINGS_SK_PLAY_SP:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          Nastavenia                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            HRÁČI                                          ║)" << "\n";
        cout << R"(║                        >┏━━━━━━━━━━┓<                 ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        >┃  JEDEN   ┃<                 ┃  DVAJA   ┃                        ║)" << "\n";
        cout << R"(║                        >┗━━━━━━━━━━┛<                 ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            JAZYK                                          ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          OBTIAŽNOSŤ                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  ĽAHKÁ   ┃                  ┃  ŤAŽKÁ   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_SK_PLAY_MP:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          Nastavenia                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            HRÁČI                                          ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                 >┏━━━━━━━━━━┓<                       ║)" << "\n";
        cout << R"(║                         ┃  JEDEN   ┃                 >┃  DVAJA   ┃<                       ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                 >┗━━━━━━━━━━┛<                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            JAZYK                                          ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          OBTIAŽNOSŤ                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  ĽAHKÁ   ┃                  ┃  ŤAŽKÁ   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_SK_LANG_SK:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          Nastavenia                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            HRÁČI                                          ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  JEDEN   ┃                  ┃  DVAJA   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            JAZYK                                          ║)" << "\n";
        cout << R"(║                       >┏━━━━━━━━━━━┓<                 ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                       >┃ SLOVENSKÝ ┃<                 ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                       >┗━━━━━━━━━━━┛<                 ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          OBTIAŽNOSŤ                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  ĽAHKÁ   ┃                  ┃  ŤAŽKÁ   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_SK_LANG_EN:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          Nastavenia                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            HRÁČI                                          ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  JEDEN   ┃                  ┃  DVAJA   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            JAZYK                                          ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                 >┏━━━━━━━━━━┓<                       ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                 >┃ ENGLISH  ┃<                       ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                 >┗━━━━━━━━━━┛<                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          OBTIAŽNOSŤ                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  ĽAHKÁ   ┃                  ┃  ŤAŽKÁ   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_SK_DIFF_EASY:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          Nastavenia                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            HRÁČI                                          ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  JEDEN   ┃                  ┃  DVAJA   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            JAZYK                                          ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          OBTIAŽNOSŤ                                       ║)" << "\n";
        cout << R"(║                        >┏━━━━━━━━━━┓<                 ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        >┃  ĽAHKÁ   ┃<                 ┃  ŤAŽKÁ   ┃                        ║)" << "\n";
        cout << R"(║                        >┗━━━━━━━━━━┛<                 ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_SK_DIFF_HARD:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          Nastavenia                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            HRÁČI                                          ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  JEDEN   ┃                  ┃  DVAJA   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            JAZYK                                          ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          OBTIAŽNOSŤ                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                 >┏━━━━━━━━━━┓<                       ║)" << "\n";
        cout << R"(║                         ┃  ĽAHKÁ   ┃                 >┃  ŤAŽKÁ   ┃<                       ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                 >┗━━━━━━━━━━┛<                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                         ┏━━━━━━━━━━┓                                      ║)" << "\n";
        cout << R"(║                                         ┃   EXIT   ┃                                      ║)" << "\n";
        cout << R"(║                                         ┗━━━━━━━━━━┛                                      ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case SETTINGS_SK_EXIT:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          Nastavenia                                       ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            HRÁČI                                          ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  JEDEN   ┃                  ┃  DVAJA   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                            JAZYK                                          ║)" << "\n";
        cout << R"(║                        ┏━━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                        ┃ SLOVENSKÝ ┃                  ┃ ENGLISH  ┃                        ║)" << "\n";
        cout << R"(║                        ┗━━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                          OBTIAŽNOSŤ                                       ║)" << "\n";
        cout << R"(║                         ┏━━━━━━━━━━┓                  ┏━━━━━━━━━━┓                        ║)" << "\n";
        cout << R"(║                         ┃  ĽAHKÁ   ┃                  ┃  ŤAŽKÁ   ┃                        ║)" << "\n";
        cout << R"(║                         ┗━━━━━━━━━━┛                  ┗━━━━━━━━━━┛                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                        >┏━━━━━━━━━━┓<                                     ║)" << "\n";
        cout << R"(║                                        >┃   EXIT   ┃<                                     ║)" << "\n";
        cout << R"(║                                        >┗━━━━━━━━━━┛<                                     ║)" << "\n";
        cout << R"(║                                        (ŠÍPKY A ENTER)                                    ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;



    case RULES_EN:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                 ____          _                                           ║)" << "\n";
        cout << R"(║                                |  _ \  _   _ | |  ___   ___                               ║)" << "\n";
        cout << R"(║                                | |_) || | | || | / _ \ / __|                              ║)" << "\n";
        cout << R"(║                                |  _ < | |_| || ||  __/ \__ \                              ║)" << "\n";
        cout << R"(║                                |_| \_\ \__,_||_| \___| |___/                              ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                       - Press a letter key to guess that letter                           ║)" << "\n";
        cout << R"(║               - Every correct guess fills in all appearances of that letter               ║)" << "\n";
        cout << R"(║                             - You can only make 9 mistakes                                ║)" << "\n";
        cout << R"(║                           - After 9 mistakes, it's game over!                             ║)" << "\n";
        cout << R"(║                           - Word length varies by difficulty                              ║)" << "\n";
        cout << R"(║                - In multiplayer, your opponent inputs the word for you to guess           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                      >┏━━━━━━━━━━━┓<                                      ║)" << "\n";
        cout << R"(║                                      >┃   CLOSE   ┃<                                      ║)" << "\n";
        cout << R"(║                                      >┗━━━━━━━━━━━┛<                                      ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


    case RULES_SK:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                            ____                   _     _ _   __                          ║)" << "\n";
        cout << R"(║                            |  _ \ _ __ __ ___   _(_) __| | | /_/_                         ║)" << "\n";
        cout << R"(║                            | |_) | '__/ _` \ \ / / |/ _` | |/ _` |                        ║)" << "\n";
        cout << R"(║                            |  __/| | | (_| |\ V /| | (_| | | (_| |                        ║)" << "\n";
        cout << R"(║                            |_|   |_|  \__,_| \_/ |_|\__,_|_|\__,_|                        ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                           - Stlačte klávesu aby ste hádali písmeno                        ║)" << "\n";
        cout << R"(║                   - Každý správny odhad odhalí písmeno, ktoré ste zadali                  ║)" << "\n";
        cout << R"(║                                - Môžete urobiť iba 9 chýb                                 ║)" << "\n";
        cout << R"(║                         - Po 9 chybách, hra skončila a prehrávate!                        ║)" << "\n";
        cout << R"(║                            - Dĺžka slov závisí od obtiažnosti                             ║)" << "\n";
        cout << R"(║                 - Pri dvoch hráčoch, váš oponent zadáva slovo, ktoré vy hádate            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                     >┏━━━━━━━━━━━━━┓<                                     ║)" << "\n";
        cout << R"(║                                     >┃   ZAVRIEŤ   ┃<                                     ║)" << "\n";
        cout << R"(║                                     >┗━━━━━━━━━━━━━┛<                                     ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;








    case VICTORY_EN:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                ██╗   ██╗ ██████╗ ██╗   ██╗                                                ║)" << "\n";
        cout << R"(║                ╚██╗ ██╔╝██╔═══██╗██║   ██║                                                ║)" << "\n";
        cout << R"(║                 ╚████╔╝ ██║   ██║██║   ██║                                                ║)" << "\n";
        cout << R"(║                  ╚██╔╝  ██║   ██║██║   ██║                                                ║)" << "\n";
        cout << R"(║                   ██║   ╚██████╔╝╚██████╔╝                                                ║)" << "\n";
        cout << R"(║                   ╚═╝    ╚═════╝  ╚═════╝                                                 ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                               ██╗    ██╗ ██████╗ ███╗   ██╗               ║)" << "\n";
        cout << R"(║                                               ██║    ██║██╔═══██╗████╗  ██║               ║)" << "\n";
        cout << R"(║                                               ██║ █╗ ██║██║   ██║██╔██╗ ██║               ║)" << "\n";
        cout << R"(║                                               ██║███╗██║██║   ██║██║╚██╗██║               ║)" << "\n";
        cout << R"(║                                               ╚███╔███╔╝╚██████╔╝██║ ╚████║               ║)" << "\n";
        cout << R"(║                                                ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═══╝               ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                ██╗   ██╗ ██████╗ ██╗   ██╗    ██╗    ██╗ ██████╗ ███╗   ██╗               ║)" << "\n";
        cout << R"(║                ╚██╗ ██╔╝██╔═══██╗██║   ██║    ██║    ██║██╔═══██╗████╗  ██║               ║)" << "\n";
        cout << R"(║                 ╚████╔╝ ██║   ██║██║   ██║    ██║ █╗ ██║██║   ██║██╔██╗ ██║               ║)" << "\n";
        cout << R"(║                  ╚██╔╝  ██║   ██║██║   ██║    ██║███╗██║██║   ██║██║╚██╗██║               ║)" << "\n";
        cout << R"(║                   ██║   ╚██████╔╝╚██████╔╝    ╚███╔███╔╝╚██████╔╝██║ ╚████║               ║)" << "\n";
        cout << R"(║                   ╚═╝    ╚═════╝  ╚═════╝      ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═══╝               ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case LOSS_EN:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║            ▓██   ██▓ ▒█████   █    ██                                                     ║)" << "\n";
        cout << R"(║             ▒██  ██▒▒██▒  ██▒ ██  ▓██▒                                                    ║)" << "\n";
        cout << R"(║              ▒██ ██░▒██░  ██▒▓██  ▒██░                                                    ║)" << "\n";
        cout << R"(║              ░ ▐██▓░▒██   ██░▓▓█  ░██░                                                    ║)" << "\n";
        cout << R"(║              ░ ██▒▓░░ ████▓▒░▒▒█████▓                                                     ║)" << "\n";
        cout << R"(║               ██▒▒▒ ░ ▒░▒░▒░ ░▒▓▒ ▒ ▒                                                     ║)" << "\n";
        cout << R"(║             ▓██ ░▒░   ░ ▒ ▒░ ░░▒░ ░ ░                                                     ║)" << "\n";
        cout << R"(║             ▒ ▒ ░░  ░ ░ ░ ▒   ░░░ ░ ░                                                     ║)" << "\n";
        cout << R"(║             ░ ░         ░ ░     ░                                                         ║)" << "\n";
        cout << R"(║             ░ ░                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                              ██▓     ▒█████    ██████ ▄▄▄█████▓           ║)" << "\n";
        cout << R"(║                                             ▓██▒    ▒██▒  ██▒▒██    ▒ ▓  ██▒ ▓▒           ║)" << "\n";
        cout << R"(║                                             ▒██░    ▒██░  ██▒░ ▓██▄   ▒ ▓██░ ▒░           ║)" << "\n";
        cout << R"(║                                             ▒██░    ▒██   ██░  ▒   ██▒░ ▓██▓ ░            ║)" << "\n";
        cout << R"(║                                             ░██████▒░ ████▓▒░▒██████▒▒  ▒██▒ ░            ║)" << "\n";
        cout << R"(║                                             ░ ▒░▓  ░░ ▒░▒░▒░ ▒ ▒▓▒ ▒ ░  ▒ ░░              ║)" << "\n";
        cout << R"(║                                             ░ ░ ▒  ░  ░ ▒ ▒░ ░ ░▒  ░ ░    ░               ║)" << "\n";
        cout << R"(║                                               ░ ░   ░ ░ ░ ▒  ░  ░  ░    ░                 ║)" << "\n";
        cout << R"(║                                                 ░  ░    ░ ░        ░                      ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║            ▓██   ██▓ ▒█████   █    ██        ██▓     ▒█████    ██████ ▄▄▄█████▓           ║)" << "\n";
        cout << R"(║             ▒██  ██▒▒██▒  ██▒ ██  ▓██▒      ▓██▒    ▒██▒  ██▒▒██    ▒ ▓  ██▒ ▓▒           ║)" << "\n";
        cout << R"(║              ▒██ ██░▒██░  ██▒▓██  ▒██░      ▒██░    ▒██░  ██▒░ ▓██▄   ▒ ▓██░ ▒░           ║)" << "\n";
        cout << R"(║              ░ ▐██▓░▒██   ██░▓▓█  ░██░      ▒██░    ▒██   ██░  ▒   ██▒░ ▓██▓ ░            ║)" << "\n";
        cout << R"(║              ░ ██▒▓░░ ████▓▒░▒▒█████▓       ░██████▒░ ████▓▒░▒██████▒▒  ▒██▒ ░            ║)" << "\n";
        cout << R"(║               ██▒▒▒ ░ ▒░▒░▒░ ░▒▓▒ ▒ ▒       ░ ▒░▓  ░░ ▒░▒░▒░ ▒ ▒▓▒ ▒ ░  ▒ ░░              ║)" << "\n";
        cout << R"(║             ▓██ ░▒░   ░ ▒ ▒░ ░░▒░ ░ ░       ░ ░ ▒  ░  ░ ▒ ▒░ ░ ░▒  ░ ░    ░               ║)" << "\n";
        cout << R"(║             ▒ ▒ ░░  ░ ░ ░ ▒   ░░░ ░ ░         ░ ░   ░ ░ ░ ▒  ░  ░  ░    ░                 ║)" << "\n";
        cout << R"(║             ░ ░         ░ ░     ░               ░  ░    ░ ░        ░                      ║)" << "\n";
        cout << R"(║             ░ ░                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


        // FIN SCREEN - SLOVAK ---------------------------------------------------------------------------------------------------------------------
        // FONT NAME - ANSI SHADOW -----------------------------------------------------------------------------------------------------------------
    case VICTORY_SK:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║             ██╗   ██╗██╗   ██╗██╗  ██╗██████╗  █████╗ ██╗                                 ║)" << "\n";
        cout << R"(║             ██║   ██║╚██╗ ██╔╝██║  ██║██╔══██╗██╔══██╗██║                                 ║)" << "\n";
        cout << R"(║             ██║   ██║ ╚████╔╝ ███████║██████╔╝███████║██║                                 ║)" << "\n";
        cout << R"(║             ╚██╗ ██╔╝  ╚██╔╝  ██╔══██║██╔══██╗██╔══██║██║                                 ║)" << "\n";
        cout << R"(║              ╚████╔╝    ██║   ██║  ██║██║  ██║██║  ██║███████╗                            ║)" << "\n";
        cout << R"(║               ╚═══╝     ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝                            ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                   ███████╗██╗             ║)" << "\n";
        cout << R"(║                                                                   ██╔════╝██║             ║)" << "\n";
        cout << R"(║                                                                   ███████╗██║             ║)" << "\n";
        cout << R"(║                                                                   ╚════██║██║             ║)" << "\n";
        cout << R"(║                                                                   ███████║██║             ║)" << "\n";
        cout << R"(║                                                                   ╚══════╝╚═╝             ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║             ██╗   ██╗██╗   ██╗██╗  ██╗██████╗  █████╗ ██╗         ███████╗██╗             ║)" << "\n";
        cout << R"(║             ██║   ██║╚██╗ ██╔╝██║  ██║██╔══██╗██╔══██╗██║         ██╔════╝██║             ║)" << "\n";
        cout << R"(║             ██║   ██║ ╚████╔╝ ███████║██████╔╝███████║██║         ███████╗██║             ║)" << "\n";
        cout << R"(║             ╚██╗ ██╔╝  ╚██╔╝  ██╔══██║██╔══██╗██╔══██║██║         ╚════██║██║             ║)" << "\n";
        cout << R"(║              ╚████╔╝    ██║   ██║  ██║██║  ██║██║  ██║███████╗    ███████║██║             ║)" << "\n";
        cout << R"(║               ╚═══╝     ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝    ╚══════╝╚═╝             ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;


        // FONT NAME - BLOODY --------------------------------------------------------------------------------------------------------------------
    case LOSS_SK:
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║     ██▓███   ██▀███  ▓█████  ██░ ██  ██▀███   ▄▄▄       ██▓                               ║)" << "\n";
        cout << R"(║    ▓██░  ██▒▓██ ▒ ██▒▓█   ▀ ▓██░ ██▒▓██ ▒ ██▒▒████▄    ▓██▒                               ║)" << "\n";
        cout << R"(║    ▓██░ ██▓▒▓██ ░▄█ ▒▒███   ▒██▀▀██░▓██ ░▄█ ▒▒██  ▀█▄  ▒██░                               ║)" << "\n";
        cout << R"(║    ▒██▄█▓▒ ▒▒██▀▀█▄  ▒▓█  ▄ ░▓█ ░██ ▒██▀▀█▄  ░██▄▄▄▄██ ▒██░                               ║)" << "\n";
        cout << R"(║    ▒██▒ ░  ░░██▓ ▒██▒░▒████▒░▓█▒░██▓░██▓ ▒██▒ ▓█   ▓██▒░██████▒                           ║)" << "\n";
        cout << R"(║    ▒▓▒░ ░  ░░ ▒▓ ░▒▓░░░ ▒░ ░ ▒ ░░▒░▒░ ▒▓ ░▒▓░ ▒▒   ▓▒█░░ ▒░▓  ░                           ║)" << "\n";
        cout << R"(║    ░▒ ░       ░▒ ░ ▒░ ░ ░  ░ ▒ ░▒░ ░  ░▒ ░ ▒░  ▒   ▒▒ ░░ ░ ▒  ░                           ║)" << "\n";
        cout << R"(║    ░░         ░░   ░    ░    ░  ░░ ░  ░░   ░   ░   ▒     ░ ░                              ║)" << "\n";
        cout << R"(║                ░        ░  ░ ░  ░  ░   ░           ░  ░    ░  ░                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                        ██████  ██▓        ║)" << "\n";
        cout << R"(║                                                                      ▒██    ▒ ▓██▒        ║)" << "\n";
        cout << R"(║                                                                      ░ ▓██▄   ▒██▒        ║)" << "\n";
        cout << R"(║                                                                        ▒   ██▒░██░        ║)" << "\n";
        cout << R"(║                                                                      ▒██████▒▒░██░        ║)" << "\n";
        cout << R"(║                                                                      ▒ ▒▓▒ ▒ ░░▓          ║)" << "\n";
        cout << R"(║                                                                      ░ ░▒  ░ ░ ▒ ░        ║)" << "\n";
        cout << R"(║                                                                      ░  ░  ░   ▒ ░        ║)" << "\n";
        cout << R"(║                                                                            ░   ░          ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";

        std::this_thread::sleep_for(std::chrono::seconds(1));
        clearConsole();

        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║     ██▓███   ██▀███  ▓█████  ██░ ██  ██▀███   ▄▄▄       ██▓            ██████  ██▓        ║)" << "\n";
        cout << R"(║    ▓██░  ██▒▓██ ▒ ██▒▓█   ▀ ▓██░ ██▒▓██ ▒ ██▒▒████▄    ▓██▒          ▒██    ▒ ▓██▒        ║)" << "\n";
        cout << R"(║    ▓██░ ██▓▒▓██ ░▄█ ▒▒███   ▒██▀▀██░▓██ ░▄█ ▒▒██  ▀█▄  ▒██░          ░ ▓██▄   ▒██▒        ║)" << "\n";
        cout << R"(║    ▒██▄█▓▒ ▒▒██▀▀█▄  ▒▓█  ▄ ░▓█ ░██ ▒██▀▀█▄  ░██▄▄▄▄██ ▒██░            ▒   ██▒░██░        ║)" << "\n";
        cout << R"(║    ▒██▒ ░  ░░██▓ ▒██▒░▒████▒░▓█▒░██▓░██▓ ▒██▒ ▓█   ▓██▒░██████▒      ▒██████▒▒░██░        ║)" << "\n";
        cout << R"(║    ▒▓▒░ ░  ░░ ▒▓ ░▒▓░░░ ▒░ ░ ▒ ░░▒░▒░ ▒▓ ░▒▓░ ▒▒   ▓▒█░░ ▒░▓  ░      ▒ ▒▓▒ ▒ ░░▓          ║)" << "\n";
        cout << R"(║    ░▒ ░       ░▒ ░ ▒░ ░ ░  ░ ▒ ░▒░ ░  ░▒ ░ ▒░  ▒   ▒▒ ░░ ░ ▒  ░      ░ ░▒  ░ ░ ▒ ░        ║)" << "\n";
        cout << R"(║    ░░         ░░   ░    ░    ░  ░░ ░  ░░   ░   ░   ▒     ░ ░         ░  ░  ░   ▒ ░        ║)" << "\n";
        cout << R"(║                ░        ░  ░ ░  ░  ░   ░           ░  ░    ░  ░            ░   ░          ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

        // HANGMAN STAGES (FRAMES) -----------------------------------------------------------------------------------------------------------------
        
        
    case STAGE_1:  // NO MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_2: // ONE MISTAKE
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                 ________________________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_3: // TWO MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _                                                              ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_4: // THREE MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _______________________                                        ║)" << "\n";
        cout << R"(║                           |███████████████████████)                                       ║)" << "\n";
        cout << R"(║                           |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                        ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_5: // FOUR MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _______________________                                        ║)" << "\n";
        cout << R"(║                           |███████████████████████)                                       ║)" << "\n";
        cout << R"(║                           |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾                                        ║)" << "\n";
        cout << R"(║                           |█|                   |                                         ║)" << "\n";
        cout << R"(║                           |█|                 /‾‾‾\                                       ║)" << "\n";
        cout << R"(║                           |█|                 \___/                                       ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;
        
    case STAGE_6: // FIVE MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _______________________                                        ║)" << "\n";
        cout << R"(║                           |███████████████████████)                                       ║)" << "\n";
        cout << R"(║                           |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾                                        ║)" << "\n";
        cout << R"(║                           |█|                   |                                         ║)" << "\n";
        cout << R"(║                           |█|                 /‾‾‾\                                       ║)" << "\n";
        cout << R"(║                           |█|                 \___/                                       ║)" << "\n";
        cout << R"(║                           |█|                 |   |                                       ║)" << "\n";
        cout << R"(║                           |█|                 |   |                                       ║)" << "\n";
        cout << R"(║                           |█|                 |   |                                       ║)" << "\n";
        cout << R"(║                           |█|                  ‾‾‾                                        ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_7: // SIX MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _______________________                                        ║)" << "\n";
        cout << R"(║                           |███████████████████████)                                       ║)" << "\n";
        cout << R"(║                           |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾                                        ║)" << "\n";
        cout << R"(║                           |█|                   |                                         ║)" << "\n";
        cout << R"(║                           |█|                 /‾‾‾\                                       ║)" << "\n";
        cout << R"(║                           |█|               __\___/                                       ║)" << "\n";
        cout << R"(║                           |█|              ( _|   |                                       ║)" << "\n";
        cout << R"(║                           |█|              | ||   |                                       ║)" << "\n";
        cout << R"(║                           |█|              | ||   |                                       ║)" << "\n";
        cout << R"(║                           |█|              (_) ‾‾‾                                        ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_8: // SEVEN MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _______________________                                        ║)" << "\n";
        cout << R"(║                           |███████████████████████)                                       ║)" << "\n";
        cout << R"(║                           |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾                                        ║)" << "\n";
        cout << R"(║                           |█|                   |                                         ║)" << "\n";
        cout << R"(║                           |█|                 /‾‾‾\                                       ║)" << "\n";
        cout << R"(║                           |█|               __\___/__                                     ║)" << "\n";
        cout << R"(║                           |█|              ( _|   |_ )                                    ║)" << "\n";
        cout << R"(║                           |█|              | ||   || |                                    ║)" << "\n";
        cout << R"(║                           |█|              | ||   || |                                    ║)" << "\n";
        cout << R"(║                           |█|              (_) ‾‾‾ (_)                                    ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        cout << R"()" << "\n";

        while (_kbhit()) _getch();
        break;

    case STAGE_9: // EIGHT MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _______________________                                        ║)" << "\n";
        cout << R"(║                           |███████████████████████)                                       ║)" << "\n";
        cout << R"(║                           |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾                                        ║)" << "\n";
        cout << R"(║                           |█|                   |                                         ║)" << "\n";
        cout << R"(║                           |█|                 /‾‾‾\                                       ║)" << "\n";
        cout << R"(║                           |█|               __\___/__                                     ║)" << "\n";
        cout << R"(║                           |█|              ( _|   |_ )                                    ║)" << "\n";
        cout << R"(║                           |█|              | ||   || |                                    ║)" << "\n";
        cout << R"(║                           |█|              | ||   || |                                    ║)" << "\n";
        cout << R"(║                           |█|              (_)|‾|‾ (_)                                    ║)" << "\n";
        cout << R"(║                           |█|                 | |                                         ║)" << "\n";
        cout << R"(║                           |█|                _| |                                         ║)" << "\n";
        cout << R"(║                           |█|               /___|                                         ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_10: // NINE MISTAKES
        cout << R"()" << "\n";
        cout << R"(╔═══════════════════════════════════════════════════════════════════════════════════════════╗)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                            _______________________                                        ║)" << "\n";
        cout << R"(║                           |███████████████████████)                                       ║)" << "\n";
        cout << R"(║                           |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾                                        ║)" << "\n";
        cout << R"(║                           |█|                   |                                         ║)" << "\n";
        cout << R"(║                           |█|                 /‾‾‾\                                       ║)" << "\n";
        cout << R"(║                           |█|               __\___/__                                     ║)" << "\n";
        cout << R"(║                           |█|              ( _|   |_ )                                    ║)" << "\n";
        cout << R"(║                           |█|              | ||   || |                                    ║)" << "\n";
        cout << R"(║                           |█|              | ||   || |                                    ║)" << "\n";
        cout << R"(║                           |█|              (_)|‾‾‾|(_)                                    ║)" << "\n";
        cout << R"(║                           |█|                 | | |                                       ║)" << "\n";
        cout << R"(║                           |█|                _| | |_                                      ║)" << "\n";
        cout << R"(║                           |█|               /___|___\                                     ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                           |█|                                                             ║)" << "\n";
        cout << R"(║                 __________|█|___________                                                  ║)" << "\n";
        cout << R"(║                 (██████████████████████)                                                  ║)" << "\n";
        cout << R"(║                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                  ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(║                                                                                           ║)" << "\n";
        cout << R"(╚═══════════════════════════════════════════════════════════════════════════════════════════╝)" << "\n";
        while (_kbhit()) _getch();
        break;



    default:
        break;
    }
}