#include "iostream"
#include <thread>
#include <conio.h>
using namespace std;

enum HangmanStage {
    TITLE = 1,
    VICTORY,
    LOSS,
    STAGE_1,
    STAGE_2,
    STAGE_3,
    STAGE_4,
    STAGE_5,
    STAGE_6,
    STAGE_7,
    STAGE_8,
    STAGE_9,
    STAGE_10
};

//TODO: make a UI
//      center everything
//      put the hangman in a box?
//      restart menu
//      single/multiplayer option menu
//      difficulty selector

void renderAscii(unsigned int a)
{
    switch (a)
    {
    case TITLE:
        std::this_thread::sleep_for(std::chrono::milliseconds(400));

        cout << R"( _   _ )" << "\n";
        cout << R"(| | | |)" << "\n";
        cout << R"(| |_| |)" << "\n";
        cout << R"(|  _  |)" << "\n";
        cout << R"(| | | |)" << "\n";
        cout << R"(\_| |_/)" << "\n";
        cout << R"(       )" << "\n";
        cout << R"(       )" << "\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        system("cls");

        cout << R"( _   _       )" << "\n";
        cout << R"(| | | |      )" << "\n";
        cout << R"(| |_| | __ _ )" << "\n";
        cout << R"(|  _  |/ _` |)" << "\n";
        cout << R"(| | | | (_| |)" << "\n";
        cout << R"(\_| |_/\__,_|)" << "\n";
        cout << R"(             )" << "\n";
        cout << R"(             )" << "\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        system("cls");

        cout << R"( _   _             )" << "\n";
        cout << R"(| | | |            )" << "\n";
        cout << R"(| |_| | __ _ _ __  )" << "\n";
        cout << R"(|  _  |/ _` | '_ \ )" << "\n";
        cout << R"(| | | | (_| | | | |)" << "\n";
        cout << R"(\_| |_/\__,_|_| |_|)" << "\n";
        cout << R"(                   )" << "\n";
        cout << R"(                   )" << "\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        system("cls");

        cout << R"( _   _                   )" << "\n";
        cout << R"(| | | |                  )" << "\n";
        cout << R"(| |_| | __ _ _ __   __ _ )" << "\n";
        cout << R"(|  _  |/ _` | '_ \ / _` |)" << "\n";
        cout << R"(| | | | (_| | | | | (_| |)" << "\n";
        cout << R"(\_| |_/\__,_|_| |_|\__, |)" << "\n";
        cout << R"(                    __/ |)" << "\n";
        cout << R"(                   |___/ )" << "\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        system("cls");

        cout << R"( _   _                             )" << "\n";
        cout << R"(| | | |                            )" << "\n";
        cout << R"(| |_| | __ _ _ __   __ _ _ __ ___  )" << "\n";
        cout << R"(|  _  |/ _` | '_ \ / _` | '_ ` _ \ )" << "\n";
        cout << R"(| | | | (_| | | | | (_| | | | | | |)" << "\n";
        cout << R"(\_| |_/\__,_|_| |_|\__, |_| |_| |_|)" << "\n";
        cout << R"(                    __/ |          )" << "\n";
        cout << R"(                   |___/           )" << "\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        system("cls");

        cout << R"( _   _                                   )" << "\n";
        cout << R"(| | | |                                  )" << "\n";
        cout << R"(| |_| | __ _ _ __   __ _ _ __ ___   __ _ )" << "\n";
        cout << R"(|  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` |)" << "\n";
        cout << R"(| | | | (_| | | | | (_| | | | | | | (_| |)" << "\n";
        cout << R"(\_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|)" << "\n";
        cout << R"(                    __/ |                )" << "\n";
        cout << R"(                   |___/                 )" << "\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        system("cls");

        cout << R"( _   _                                         )" << "\n";
        cout << R"(| | | |                                        )" << "\n";
        cout << R"(| |_| | __ _ _ __   __ _ _ __ ___   __ _ _ __  )" << "\n";
        cout << R"(|  _  |/ _` | '_ \ / _` | '_ ` _ \ / _` | '_ \ )" << "\n";
        cout << R"(| | | | (_| | | | | (_| | | | | | | (_| | | | |)" << "\n";
        cout << R"(\_| |_/\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|)" << "\n";
        cout << R"(                    __/ |                      )" << "\n";
        cout << R"(                   |___/                       )" << "\n";
        cout << "\n\n\n";

        std::this_thread::sleep_for(std::chrono::milliseconds(400));
        while (_kbhit()) _getch();
        break;

    case VICTORY:
        cout << R"(██╗   ██╗ ██████╗ ██╗   ██╗ )" << "\n";
        cout << R"(╚██╗ ██╔╝██╔═══██╗██║   ██║ )" << "\n";
        cout << R"( ╚████╔╝ ██║   ██║██║   ██║ )" << "\n";
        cout << R"(  ╚██╔╝  ██║   ██║██║   ██║ )" << "\n";
        cout << R"(   ██║   ╚██████╔╝╚██████╔╝ )" << "\n";
        cout << R"(   ╚═╝    ╚═════╝  ╚═════╝  )" << "\n";

        std::this_thread::sleep_for(std::chrono::seconds(1));
        system("cls");

        cout << R"(                               ██╗    ██╗ ██████╗ ███╗   ██╗)" << "\n";
        cout << R"(                               ██║    ██║██╔═══██╗████╗  ██║)" << "\n";
        cout << R"(                               ██║ █╗ ██║██║   ██║██╔██╗ ██║)" << "\n";
        cout << R"(                               ██║███╗██║██║   ██║██║╚██╗██║)" << "\n";
        cout << R"(                               ╚███╔███╔╝╚██████╔╝██║ ╚████║)" << "\n";
        cout << R"(                                ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═══╝)" << "\n";

        std::this_thread::sleep_for(std::chrono::seconds(1));
        system("cls");

        cout << R"(██╗   ██╗ ██████╗ ██╗   ██╗    ██╗    ██╗ ██████╗ ███╗   ██╗)" << "\n";
        cout << R"(╚██╗ ██╔╝██╔═══██╗██║   ██║    ██║    ██║██╔═══██╗████╗  ██║)" << "\n";
        cout << R"( ╚████╔╝ ██║   ██║██║   ██║    ██║ █╗ ██║██║   ██║██╔██╗ ██║)" << "\n";
        cout << R"(  ╚██╔╝  ██║   ██║██║   ██║    ██║███╗██║██║   ██║██║╚██╗██║)" << "\n";
        cout << R"(   ██║   ╚██████╔╝╚██████╔╝    ╚███╔███╔╝╚██████╔╝██║ ╚████║)" << "\n";
        cout << R"(   ╚═╝    ╚═════╝  ╚═════╝      ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═══╝)" << "\n";
        while (_kbhit()) _getch();
        break;
    case LOSS:
        cout << R"(▓██   ██▓ ▒█████   █    ██   )" << "\n";
        cout << R"( ▒██  ██▒▒██▒  ██▒ ██  ▓██▒  )" << "\n";
        cout << R"(  ▒██ ██░▒██░  ██▒▓██  ▒██░  )" << "\n";
        cout << R"(  ░ ▐██▓░▒██   ██░▓▓█  ░██░  )" << "\n";
        cout << R"(  ░ ██▒▓░░ ████▓▒░▒▒█████▓   )" << "\n";
        cout << R"(   ██▒▒▒ ░ ▒░▒░▒░ ░▒▓▒ ▒ ▒   )" << "\n";
        cout << R"( ▓██ ░▒░   ░ ▒ ▒░ ░░▒░ ░ ░   )" << "\n";
        cout << R"( ▒ ▒ ░░  ░ ░ ░ ▒   ░░░ ░ ░   )" << "\n";
        cout << R"( ░ ░         ░ ░     ░       )" << "\n";
        cout << R"( ░ ░                         )" << "\n";

        std::this_thread::sleep_for(std::chrono::seconds(1));
        system("cls");

        cout << R"(                               ██▓     ▒█████    ██████ ▄▄▄█████▓   )" << "\n";
        cout << R"(                              ▓██▒    ▒██▒  ██▒▒██    ▒ ▓  ██▒ ▓▒   )" << "\n";
        cout << R"(                              ▒██░    ▒██░  ██▒░ ▓██▄   ▒ ▓██░ ▒░   )" << "\n";
        cout << R"(                              ▒██░    ▒██   ██░  ▒   ██▒░ ▓██▓ ░    )" << "\n";
        cout << R"(                              ░██████▒░ ████▓▒░▒██████▒▒  ▒██▒ ░    )" << "\n";
        cout << R"(                              ░ ▒░▓  ░░ ▒░▒░▒░ ▒ ▒▓▒ ▒ ░  ▒ ░░      )" << "\n";
        cout << R"(                              ░ ░ ▒  ░  ░ ▒ ▒░ ░ ░▒  ░ ░    ░       )" << "\n";
        cout << R"(                                ░ ░   ░ ░ ░ ▒  ░  ░  ░    ░         )" << "\n";
        cout << R"(                                  ░  ░    ░ ░        ░              )" << "\n";
        cout << R"(                                                                    )" << "\n";

        std::this_thread::sleep_for(std::chrono::seconds(1));
        system("cls");

        cout << R"(▓██   ██▓ ▒█████   █    ██     ██▓     ▒█████    ██████ ▄▄▄█████▓   )" << "\n";
        cout << R"( ▒██  ██▒▒██▒  ██▒ ██  ▓██▒   ▓██▒    ▒██▒  ██▒▒██    ▒ ▓  ██▒ ▓▒   )" << "\n";
        cout << R"(  ▒██ ██░▒██░  ██▒▓██  ▒██░   ▒██░    ▒██░  ██▒░ ▓██▄   ▒ ▓██░ ▒░   )" << "\n";
        cout << R"(  ░ ▐██▓░▒██   ██░▓▓█  ░██░   ▒██░    ▒██   ██░  ▒   ██▒░ ▓██▓ ░    )" << "\n";
        cout << R"(  ░ ██▒▓░░ ████▓▒░▒▒█████▓    ░██████▒░ ████▓▒░▒██████▒▒  ▒██▒ ░    )" << "\n";
        cout << R"(   ██▒▒▒ ░ ▒░▒░▒░ ░▒▓▒ ▒ ▒    ░ ▒░▓  ░░ ▒░▒░▒░ ▒ ▒▓▒ ▒ ░  ▒ ░░      )" << "\n";
        cout << R"( ▓██ ░▒░   ░ ▒ ▒░ ░░▒░ ░ ░    ░ ░ ▒  ░  ░ ▒ ▒░ ░ ░▒  ░ ░    ░       )" << "\n";
        cout << R"( ▒ ▒ ░░  ░ ░ ░ ▒   ░░░ ░ ░      ░ ░   ░ ░ ░ ▒  ░  ░  ░    ░         )" << "\n";
        cout << R"( ░ ░         ░ ░     ░            ░  ░    ░ ░        ░              )" << "\n";
        cout << R"( ░ ░                                                                )" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_1:
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_2:
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << "\n";
        cout << R"(________________________)" << "\n";
        cout << R"((██████████████████████))" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾)" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_3:
        cout << R"(          ___           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(          |█|           )" << "\n";
        cout << R"(__________|█|___________)" << "\n";
        cout << R"((██████████████████████))" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾)" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_4:
        cout << R"(           _______________________   )" << "\n";
        cout << R"(          |███████████████████████)  )" << "\n";
        cout << R"(          |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(__________|█|___________             )" << "\n";
        cout << R"((███████████████████████)            )" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾             )" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_5:
        cout << R"(           _______________________   )" << "\n";
        cout << R"(          |███████████████████████)  )" << "\n";
        cout << R"(          |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾   )" << "\n";
        cout << R"(          |█|                   |    )" << "\n";
        cout << R"(          |█|                 /‾‾‾\  )" << "\n";
        cout << R"(          |█|                 \___/  )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(          |█|                        )" << "\n";
        cout << R"(__________|█|___________             )" << "\n";
        cout << R"((██████████████████████)             )" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾             )" << "\n";
        while (_kbhit()) _getch();
        break;
        
    case STAGE_6:
        cout << R"(           _______________________       )" << "\n";
        cout << R"(          |███████████████████████)      )" << "\n";
        cout << R"(          |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾       )" << "\n";
        cout << R"(          |█|                   |        )" << "\n";
        cout << R"(          |█|                 /‾‾‾\      )" << "\n";
        cout << R"(          |█|                 \___/      )" << "\n";
        cout << R"(          |█|                 |   |      )" << "\n";
        cout << R"(          |█|                 |   |      )" << "\n";
        cout << R"(          |█|                 |   |      )" << "\n";
        cout << R"(          |█|                  ‾‾‾       )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(__________|█|___________                 )" << "\n";
        cout << R"((██████████████████████)                 )" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                 )" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_7:
        cout <<R"(           _______________________    )" << "\n";
        cout <<R"(          |███████████████████████)   )" << "\n";
        cout <<R"(          |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾    )" << "\n";
        cout <<R"(          |█|                   |     )" << "\n";
        cout <<R"(          |█|                 /‾‾‾\   )" << "\n";
        cout <<R"(          |█|               __\___/   )" << "\n";
        cout <<R"(          |█|              ( _|   |   )" << "\n";
        cout <<R"(          |█|              | ||   |   )" << "\n";
        cout <<R"(          |█|              | ||   |   )" << "\n";
        cout <<R"(          |█|              (_) ‾‾‾    )" << "\n";
        cout <<R"(          |█|                         )" << "\n";
        cout <<R"(          |█|                         )" << "\n";
        cout <<R"(          |█|                         )" << "\n";
        cout <<R"(          |█|                         )" << "\n";
        cout <<R"(          |█|                         )" << "\n";
        cout <<R"(__________|█|___________              )" << "\n";
        cout <<R"((██████████████████████)              )" << "\n";
        cout <<R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾              )" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_8:
        cout << R"(           _______________________       )" << "\n";
        cout << R"(          |███████████████████████)      )" << "\n";
        cout << R"(          |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾       )" << "\n";
        cout << R"(          |█|                   |        )" << "\n";
        cout << R"(          |█|                 /‾‾‾\      )" << "\n";
        cout << R"(          |█|               __\___/__    )" << "\n";
        cout << R"(          |█|              ( _|   |_ )   )" << "\n";
        cout << R"(          |█|              | ||   || |   )" << "\n";
        cout << R"(          |█|              | ||   || |   )" << "\n";
        cout << R"(          |█|              (_) ‾‾‾ (_)   )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(__________|█|___________                 )" << "\n";
        cout << R"((██████████████████████)                 )" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                 )" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_9:
        cout << R"(           _______________________       )" << "\n";
        cout << R"(          |███████████████████████)      )" << "\n";
        cout << R"(          |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾       )" << "\n";
        cout << R"(          |█|                   |        )" << "\n";
        cout << R"(          |█|                 /‾‾‾\      )" << "\n";
        cout << R"(          |█|               __\___/__    )" << "\n";
        cout << R"(          |█|              ( _|   |_ )   )" << "\n";
        cout << R"(          |█|              | ||   || |   )" << "\n";
        cout << R"(          |█|              | ||   || |   )" << "\n";
        cout << R"(          |█|              (_)|‾|‾ (_)   )" << "\n";
        cout << R"(          |█|                 | |        )" << "\n";
        cout << R"(          |█|                _| |        )" << "\n";
        cout << R"(          |█|               /___|        )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(__________|█|___________                 )" << "\n";
        cout << R"((██████████████████████)                 )" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                 )" << "\n";
        while (_kbhit()) _getch();
        break;

    case STAGE_10:
        cout << R"(           _______________________       )" << "\n";
        cout << R"(          |███████████████████████)      )" << "\n";
        cout << R"(          |█|‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|‾       )" << "\n";
        cout << R"(          |█|                   |        )" << "\n";
        cout << R"(          |█|                 /‾‾‾\      )" << "\n";
        cout << R"(          |█|               __\___/__    )" << "\n";
        cout << R"(          |█|              ( _|   |_ )   )" << "\n";
        cout << R"(          |█|              | ||   || |   )" << "\n";
        cout << R"(          |█|              | ||   || |   )" << "\n";
        cout << R"(          |█|              (_)|‾‾‾|(_)   )" << "\n";
        cout << R"(          |█|                 | | |      )" << "\n";
        cout << R"(          |█|                _| | |_     )" << "\n";
        cout << R"(          |█|               /___|___\    )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(          |█|                            )" << "\n";
        cout << R"(__________|█|___________                 )" << "\n";
        cout << R"((██████████████████████)                 )" << "\n";
        cout << R"(‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                 )" << "\n";
        while (_kbhit()) _getch();
        break;

    default:
        break;
    }
}